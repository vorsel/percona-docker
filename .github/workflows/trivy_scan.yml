name: Scan Container for Security Issues

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  generate-tests:
    name: Vulnerability scan
    runs-on: ubuntu-latest
    outputs:
       matrix: ${{ steps.get-changes.outputs.matrix }}
    steps:
      - name: percona/percona-docker repo checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: set matrix
        id: get-changes
        run: |
          set -o xtrace
          ls -la ../
          ls -la 
          pwd
          git --version
          git remote -v
          files=$(git --no-pager diff --name-only origin/${{ github.base_ref }} ${{ github.sha }} | jq -R -s -c 'split("\n")[:-1]')
          echo "::set-output name=matrix::$files"
          jq . <<< "$files"
          

#          docker build -t docker.io/my-organization/my-app:${{ github.sha }} .
  test:
    needs: generate-tests
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        include: ${{ fromJSON(needs.generate-tests.outputs.matrix) }}
    steps:
      - run: |
          set -o xtrace
          jq . <<< "${{fromJSON(matrix)}}"
      - name: percona/percona-docker repo checkout
        uses: actions/checkout@v3
      - run: echo Run ${{ matrix.run }}
      - run: date
      - run: sleep 1
      - run: date

#      - name: Run Trivy vulnerability scanner
#        uses: aquasecurity/trivy-action@master
#        with:
#          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
#          format: 'table'
#          exit-code: '1'
#          ignore-unfixed: true
#          vuln-type: 'os,library'
#          severity: 'CRITICAL'
